- name: Create a disk
  google.cloud.gcp_compute_disk:
    name: disk-instance
    size_gb: 50
    source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-1804-lts
    zone: "{{ gcp_zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_auth_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: disk

- name: Create a VM
  google.cloud.gcp_compute_instance:
    name: nfs-server
    machine_type: "{{ gcp_machine_type }}"
    disks:
    - auto_delete: 'true'
      boot: 'true'
      source: "{{ disk }}"
    network_interfaces:
    - network: null
      access_configs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    zone: "{{ gcp_zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_auth_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
    metadata:
      ssh-keys: 'ivo:{{ lookup("file", "~/.ssh/id_rsa.pub") }}'
  register: nfs_server_vm

- name: Update the NFS Server Ip internal variable
  ansible.builtin.set_fact:
    nfs_server_internal_ip: '{{ nfs_server_vm.networkInterfaces[0].networkIP }}'

- name: Change Persistent Volume file
  lineinfile:
   path: roles/make_persistent_storage/files/persistent-volume.yml
   regexp: 'server: (\d+.?)+'
   line: '    server: {{ nfs_server_internal_ip }}'

- name: Create NFS Server host
  ansible.builtin.add_host:
    hostname: nfs_server_external_ip
    ansible_host: '{{ nfs_server_vm.networkInterfaces[0].accessConfigs[0].natIP }}'

- name: Update the NFS Server Ip external variable
  ansible.builtin.set_fact:
    external_ip: '{{ nfs_server_vm.networkInterfaces[0].accessConfigs[0].natIP }}'

- name: Remove NFS Server from known_hosts if alreay there
  ansible.builtin.command: 'ssh-keygen -f "~/.ssh/known_hosts" -R "{{ external_ip }}"'